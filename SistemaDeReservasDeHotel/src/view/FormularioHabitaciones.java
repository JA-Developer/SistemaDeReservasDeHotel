/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import controller.HabitacionDAO;
import javax.swing.JOptionPane;
import model.Habitacion;

/**
 *
 * @author louis
 */
public class FormularioHabitaciones extends javax.swing.JDialog {

    /**
     * Creates new form FormularioHabitaciones
     */
    private Habitacion habitacion;
    static private String Mode = "";
    static private long id = 0;
    private ListadoHabitaciones parent;
    HabitacionDAO dao = new HabitacionDAO();
    
    public FormularioHabitaciones(ListadoHabitaciones parent, boolean modal, String Mode, long id) {
        super(parent, modal);    
        this.parent = parent;
        initComponents();
        
        this.Mode = Mode;
        this.id = id;
        
        habitacion = new Habitacion();        
        
        if(Mode.equals("UPD") || Mode.equals("DLT")){
            habitacion = (Habitacion) dao.getById(id);
            txt_field_Cantidad_De_Camas.setText(Integer.toString(habitacion.getCantidadDeCamas()));
            txt_field_Precio_Por_Hora.setText(Float.toString(habitacion.getPrecioPorHora()));
        }
        
        if(Mode.equals("INS")){
            btn_operacion.setText("Insertar");
        }else if(Mode.equals("UPD")){
            btn_operacion.setText("Modificar");
        }else if(Mode.equals("DLT")){
            btn_operacion.setText("Borrar");
        }
        
    }
    
    private boolean validar(){
        if(txt_field_Cantidad_De_Camas.getText().equals(null) || txt_field_Cantidad_De_Camas.getText().equals("")){
            JOptionPane.showMessageDialog(parent, "Debe ingresar una cantidad de camas.", "ERROR DE VALIDACIÓN", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        try {
            int cantidadCamas = Integer.parseInt(txt_field_Cantidad_De_Camas.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(parent, "Debe ingresar un número válido para la cantidad de camas.", "ERROR DE VALIDACIÓN", JOptionPane.ERROR_MESSAGE);
            return false;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(parent, "Ha ocurrido un error inesperado.", "ERROR", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if(txt_field_Precio_Por_Hora.getText().equals(null) || txt_field_Precio_Por_Hora.getText().equals("")){
            JOptionPane.showMessageDialog(parent, "Debe ingresar un precio por hora.", "ERROR DE VALIDACIÓN", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        try {
            float precioPorHora = Float.parseFloat(txt_field_Precio_Por_Hora.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(parent, "Debe ingresar un número válido para el precio por hora.", "ERROR DE VALIDACIÓN", JOptionPane.ERROR_MESSAGE);
            return false;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(parent, "Ha ocurrido un error inesperado.", "ERROR", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_Background = new javax.swing.JPanel();
        label_Cantidad_De_Camas = new javax.swing.JLabel();
        txt_field_Cantidad_De_Camas = new javax.swing.JTextField();
        label_Precio_Por_Hora = new javax.swing.JLabel();
        txt_field_Precio_Por_Hora = new javax.swing.JTextField();
        btn_operacion = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrar Habitaciones");
        setBackground(new java.awt.Color(204, 204, 255));
        setIconImage(null);
        setMaximumSize(new java.awt.Dimension(700, 300));
        setMinimumSize(new java.awt.Dimension(700, 300));
        setName("FormularioHabitaciones"); // NOI18N
        setPreferredSize(new java.awt.Dimension(700, 300));
        setSize(new java.awt.Dimension(700, 300));

        panel_Background.setBackground(new java.awt.Color(204, 204, 255));
        panel_Background.setBorder(javax.swing.BorderFactory.createEmptyBorder(30, 30, 30, 30));
        panel_Background.setLayout(new java.awt.GridLayout(3, 2, 40, 40));

        label_Cantidad_De_Camas.setText("Cantidad de camas");
        label_Cantidad_De_Camas.setName("label_Cantidad_De_Camas"); // NOI18N
        panel_Background.add(label_Cantidad_De_Camas);
        label_Cantidad_De_Camas.getAccessibleContext().setAccessibleName("Cantidad_De_Camas");

        txt_field_Cantidad_De_Camas.setName("txt_field_Cantidad_De_Camas"); // NOI18N
        txt_field_Cantidad_De_Camas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_field_Cantidad_De_CamasActionPerformed(evt);
            }
        });
        panel_Background.add(txt_field_Cantidad_De_Camas);

        label_Precio_Por_Hora.setText("Precio por hora");
        label_Precio_Por_Hora.setName("label_Precio_Por_Hora"); // NOI18N
        panel_Background.add(label_Precio_Por_Hora);
        label_Precio_Por_Hora.getAccessibleContext().setAccessibleName("Precio_Por_Hora");

        txt_field_Precio_Por_Hora.setName("txt_field_Precio_Por_Hora"); // NOI18N
        panel_Background.add(txt_field_Precio_Por_Hora);

        btn_operacion.setText("Operación");
        btn_operacion.setName("btn_operacion"); // NOI18N
        btn_operacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_operacionActionPerformed(evt);
            }
        });
        panel_Background.add(btn_operacion);

        btn_cancelar.setText("Cancelar");
        btn_cancelar.setName("btn_cancelar"); // NOI18N
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });
        panel_Background.add(btn_cancelar);

        getContentPane().add(panel_Background, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_operacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_operacionActionPerformed
        // TODO add your handling code here:
        if(Mode.equals("INS")){
            boolean validacion = validar();
            if(validacion){
                Habitacion newHabitacion = new Habitacion();
                newHabitacion.setCantidadDeCamas(Integer.parseInt(txt_field_Cantidad_De_Camas.getText()));
                newHabitacion.setPrecioPorHora(Float.parseFloat(txt_field_Precio_Por_Hora.getText()));
                
                boolean operacion = dao.insert(newHabitacion);
                if(operacion){
                    parent.refrescarDatos();
                    this.dispose();
                }
            }
        }
        if(Mode.equals("UPD")){
            boolean validacion = validar();
            if(validacion){
                habitacion.setCantidadDeCamas(Integer.parseInt(txt_field_Cantidad_De_Camas.getText()));
                habitacion.setPrecioPorHora(Float.parseFloat(txt_field_Precio_Por_Hora.getText()));
                
                boolean operacion = dao.update(habitacion);
                if(operacion){
                    parent.refrescarDatos();
                    this.dispose();
                }
            }
        }
        if(Mode.equals("DLT")){
            boolean operacion = false;
            try {
                operacion = dao.delete(habitacion.getId());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(parent, "Ha ocurrido un error: " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            if(operacion){
                parent.refrescarDatos();
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(parent, "No fue posible eliminar el objeto seleccionado", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_operacionActionPerformed

    private void txt_field_Cantidad_De_CamasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_field_Cantidad_De_CamasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_field_Cantidad_De_CamasActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormularioHabitaciones dialog = new FormularioHabitaciones(new ListadoHabitaciones(), true, Mode, id);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setLocationRelativeTo(null);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_operacion;
    private javax.swing.JLabel label_Cantidad_De_Camas;
    private javax.swing.JLabel label_Precio_Por_Hora;
    private javax.swing.JPanel panel_Background;
    private javax.swing.JTextField txt_field_Cantidad_De_Camas;
    private javax.swing.JTextField txt_field_Precio_Por_Hora;
    // End of variables declaration//GEN-END:variables
}
